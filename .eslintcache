[{"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx":"1","/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts":"2","/Users/vlad.zakharchev/Work/WishApp/src/App.tsx":"3","/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx":"4","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx":"5","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx":"6","/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx":"7","/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx":"8","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx":"9","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts":"10","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx":"11","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx":"12","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx":"13","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogFooter.tsx":"14","/Users/vlad.zakharchev/Work/WishApp/src/store.ts":"15","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/reducer.ts":"16","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/selectors.ts":"17","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/middleware.ts":"18","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/loginApi.ts":"19","/Users/vlad.zakharchev/Work/WishApp/src/utils/apiHelpers.ts":"20","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/components/AddPlus.tsx":"21","/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/index.ts":"22","/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/Modal.tsx":"23","/Users/vlad.zakharchev/Work/WishApp/src/modules/CardFlow/components/WishCard/WishCard.tsx":"24","/Users/vlad.zakharchev/Work/WishApp/src/modules/CardFlow/CardContainer.tsx":"25","/Users/vlad.zakharchev/Work/WishApp/src/modules/CardFlow/components/WishCard/AddCard.tsx":"26","/Users/vlad.zakharchev/Work/WishApp/src/utils/functions.ts":"27"},{"size":620,"mtime":1630940555020,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1624353155247,"results":"30","hashOfConfig":"29"},{"size":1266,"mtime":1642512837010,"results":"31","hashOfConfig":"29"},{"size":957,"mtime":1640701052491,"results":"32","hashOfConfig":"29"},{"size":253,"mtime":1641582122110,"results":"33","hashOfConfig":"29"},{"size":2246,"mtime":1640702283320,"results":"34","hashOfConfig":"29"},{"size":434,"mtime":1640701052502,"results":"35","hashOfConfig":"29"},{"size":336,"mtime":1624353155246,"results":"36","hashOfConfig":"29"},{"size":2496,"mtime":1642529307820,"results":"37","hashOfConfig":"29"},{"size":655,"mtime":1633256364055,"results":"38","hashOfConfig":"29"},{"size":7440,"mtime":1642529313236,"results":"39","hashOfConfig":"29"},{"size":440,"mtime":1632236894782,"results":"40","hashOfConfig":"29"},{"size":1203,"mtime":1634384950613,"results":"41","hashOfConfig":"29"},{"size":580,"mtime":1634384553972,"results":"42","hashOfConfig":"29"},{"size":690,"mtime":1626561227260,"results":"43","hashOfConfig":"29"},{"size":1174,"mtime":1642513707502,"results":"44","hashOfConfig":"29"},{"size":125,"mtime":1631034533020,"results":"45","hashOfConfig":"29"},{"size":1299,"mtime":1640463721911,"results":"46","hashOfConfig":"29"},{"size":421,"mtime":1642857434706,"results":"47","hashOfConfig":"29"},{"size":1567,"mtime":1642874211323,"results":"48","hashOfConfig":"29"},{"size":1336,"mtime":1640701052493,"results":"49","hashOfConfig":"29"},{"size":34,"mtime":1640701052505,"results":"50","hashOfConfig":"29"},{"size":1720,"mtime":1642529299874,"results":"51","hashOfConfig":"29"},{"size":969,"mtime":1641578025283,"results":"52","hashOfConfig":"29"},{"size":494,"mtime":1641582057644,"results":"53","hashOfConfig":"29"},{"size":384,"mtime":1642360325004,"results":"54","hashOfConfig":"29"},{"size":191,"mtime":1642858684855,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"pks9ao",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx",[],["118","119"],"/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/App.tsx",["120"],"import React from \"react\";\n\nimport \"./App.scss\";\nimport Sidebar from \"./modules/Sidebar/Sidebar\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./modules/Header/Header\";\nimport { ActivityContainer } from \"./modules/ActivityContainer/ActivityContainer\";\nimport { useState } from \"react\";\nimport { AuthContainer } from \"./modules/LoginPage/AuthContainer\";\nimport Modal from \"./modules/_common/Modal\";\n\nfunction App() {\n  const [authStatus, setAuthStatus] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return authStatus ? (\n                <Redirect to=\"/home\" />\n              ) : (\n                <Redirect to=\"/auth\" />\n              );\n            }}\n          />\n          <Route path=\"/home\">\n            <>\n              <Sidebar />\n              <Header />\n              <ActivityContainer />\n              <Modal content={<AuthContainer />} toShow={true}></Modal>\n            </>\n          </Route>\n          <Route path=\"/auth\">\n            <AuthContainer />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx",["121"],"import React from \"react\";\nimport './appearance.scss';\n\nimport { ReactComponent as UncoverIcon } from '../../assets/uncoverIcon.svg';\n\nexport const UserAppearance = function(props: {imgSource: string, email?: string}) {\n  const { imgSource, email } = props;\n\n  return(\n    <div className=\"user-appereance\">\n      <UncoverIcon/>\n      <img src={imgSource} className=\"avatar \"/>\n      {email && <span>@{email}</span>}\n    </div>\n  );\n};","/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx",["122"],"import React, { ChangeEventHandler, useState } from \"react\";\nimport {\n  LOG_IN_TYPE,\n  SIGN_UP_TYPE,\n  NEW_PASS_TYPE,\n  TO_EMAIL_TYPE,\n  AuthFormTypes,\n  FormConstructData,\n  FormValues,\n  INST_SENT_TYPE,\n} from \"./constants\";\nimport \"./authPage.scss\";\nimport { Button } from \"./components/Button\";\nimport { useEffect } from \"react\";\nimport { LogHeader } from \"./LogHeader\";\nimport { useAuth } from \"./redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { changeBoxType, saveError } from \"./redux/reducer\";\nimport {\n  logUser,\n  regUser,\n  requestNewPass,\n  updatePassword,\n} from \"./redux/middleware\";\n\nconst LOG_HEADER = \"Организовывайте свои идеи подарков и мероприятий\";\nconst FORGET_HEADER = [\"Забыли пароль?\", \"Такое случается с лучшими из нас\"];\nconst INSTR_HEADER = \"Инструкция отправлена!\";\nconst NEW_PASS_HEADER = [\n  \"Изменение пароля\",\n  \"Длина пароля должна быть не менее 8 символов\",\n];\n\nconst EMAIL_PH = \"Email\";\nconst PASSWORD_PH = \"Пароль\";\nconst NEW_PASSWORD_PH = \"Введите новый пароль\";\nconst REPEAT_NEW_PASSWORD_PH = \"Повторите пароль\";\n\nconst LOGIN = \"ВОЙТИ\";\nconst CONTINUE = \"ПРОДОЛЖИТЬ\";\nconst SEND_INSTRUCTION = \"ОТПРАВИТЬ ИНСТРУКЦИЮ\";\nconst CHANGE_PASSWORD = \"ИЗМЕНИТЬ ПАРОЛЬ\";\n\nconst RECOVERY_HELP = \"Забыли пароль?\";\nconst ERROR_LOGIN_MESSAGE =\n  \"Неправильный логин или пароль. Может быть вы забыли пароль?\";\nconst ERROR_EMAIL_ADDRESS_MESSAGE =\n  \"Кажется, вы ввели некорректный адрес, проверьте еще раз\";\nconst ERROR_UNMATCH = \"Пароли не совпадают\";\n\nfunction selectConstructObject(type: AuthFormTypes): FormConstructData {\n  switch (type) {\n    case LOG_IN_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n    case SIGN_UP_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: CONTINUE,\n        header: LOG_HEADER,\n      };\n    case TO_EMAIL_TYPE:\n      return {\n        inputs: [{ name: \"email\", placeholder: EMAIL_PH }],\n        submitButton: SEND_INSTRUCTION,\n        errorMsg: ERROR_EMAIL_ADDRESS_MESSAGE,\n        header: FORGET_HEADER,\n      };\n    case NEW_PASS_TYPE:\n      return {\n        inputs: [\n          { name: \"password\", placeholder: NEW_PASSWORD_PH },\n          { name: \"repeatPassword\", placeholder: REPEAT_NEW_PASSWORD_PH },\n        ],\n        submitButton: CHANGE_PASSWORD,\n        errorMsg: ERROR_UNMATCH,\n        header: NEW_PASS_HEADER,\n      };\n    default:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n  }\n}\n\nfunction constructForm(\n  constructData: FormConstructData,\n  inputValues: FormValues,\n  changeInput: ChangeEventHandler,\n  onSubmit: any,\n  error?: boolean | string,\n  changeForm?: any\n) {\n  const editOnce = (function () {\n    //TODO - change function to css define\n    let isFirst = true;\n\n    return () => {\n      if (isFirst) {\n        isFirst = false;\n        return \"first\";\n      }\n      return \"\";\n    };\n  })();\n\n  const passQuestion = constructData.passwordRecovery;\n\n  const checkInputEmptiness =\n    Object.values(inputValues).length >= constructData.inputs.length &&\n    Object.values(inputValues).every((value) => !!value);\n\n  return (\n    <form className=\"auth-form\">\n      {error && (\n        <div className=\"error-message\">{constructData.errorMsg || error}</div>\n      )}\n      {constructData.inputs.map((elem) => (\n        <input\n          className={`${editOnce()} ${error && \"input-warning\"}`}\n          name={elem.name}\n          type={\n            elem.name === \"password\" || elem.name === \"repeatPassword\"\n              ? \"password\"\n              : \"text\"\n          }\n          placeholder={elem.placeholder || \"\"}\n          onChange={changeInput}\n        />\n      ))}\n      {passQuestion && (\n        <div className=\"passQuestion\">\n          <div className=\"bold\" onClick={changeForm}>\n            {constructData.passwordRecovery}\n          </div>\n        </div>\n      )}\n      {\n        <Button\n          onClick={onSubmit}\n          isDisabled={!checkInputEmptiness}\n          className={passQuestion ? \"close-button\" : \"\"}\n        >\n          {constructData.submitButton}\n        </Button>\n      }\n    </form>\n  );\n}\n\nconst SendDescription: React.FC<{ email?: string }> = ({ email }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <LogHeader header={INSTR_HEADER} />\n      <p>Вы получите наше письмо в течение 5 минут</p>\n      <p style={{ fontWeight: 600 }}>{email}</p>\n      <p>\n        {\"Не приходит письмо? Убедитесь, что оно не попало в папку спам. \"}\n        <span\n          onClick={() => {\n            dispatch(changeBoxType(INST_SENT_TYPE));\n            dispatch(requestNewPass(email));\n          }}\n          className=\"footer-link\"\n        >\n          Отправить еще раз\n        </span>\n      </p>\n    </>\n  );\n};\n\nexport const DataInputComponent = () => {\n  const dispatch = useDispatch();\n  const { error: errorMsg, type } = useAuth();\n\n  const [formData, setFormData] = useState<any>({});\n  const constructObject = selectConstructObject(type);\n\n  function onSubmit(formData: any) {\n    switch (type) {\n      case LOG_IN_TYPE: {\n        dispatch(logUser(formData));\n        break;\n      }\n      case SIGN_UP_TYPE: {\n        dispatch(regUser(formData));\n        break;\n      }\n      case TO_EMAIL_TYPE: {\n        dispatch(requestNewPass(formData));\n        dispatch(changeBoxType(INST_SENT_TYPE));\n        break;\n      }\n      case NEW_PASS_TYPE: {\n        dispatch(updatePassword());\n        break;\n      }\n    }\n  }\n\n  function changeFormData(event: any) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    dispatch(saveError(\"\"));\n  }\n\n  function changeForm() {\n    dispatch(changeBoxType(TO_EMAIL_TYPE));\n  }\n\n  const headerProps = (function () {\n    const { header } = constructObject;\n    if (Array.isArray(header)) {\n      return {\n        header: header[0],\n        additional: header[1],\n      };\n    }\n    return { header } as { header: string };\n  })();\n\n  // useEffect(() => {\n  //   const initial: FormValues = {};\n  //   setFormData(initial);\n  // }, [type]);\n\n  if (type === INST_SENT_TYPE) {\n    return <SendDescription email={formData?.email} />;\n  }\n\n  return (\n    <>\n      <LogHeader {...headerProps} />\n      {constructForm(\n        constructObject,\n        formData,\n        changeFormData,\n        () => onSubmit(formData),\n        errorMsg,\n        changeForm\n      )}\n    </>\n  );\n};\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogFooter.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/store.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/reducer.ts",["123"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../store\";\nimport { AuthFormTypes, TO_EMAIL_TYPE } from \"../constants\";\n\ntype LogResponse = {\n  [key: string]: string | number | undefined;\n};\n\ninterface AuthState {\n  type: AuthFormTypes;\n  login: LogResponse;\n  error: string;\n  isAuthorized: boolean;\n}\n\nconst initialState: AuthState = {\n  type: \"LOGIN\",\n  login: {},\n  error: \"\",\n  isAuthorized: false,\n};\n\nexport const authSlice = createSlice({\n  name: \"authentication\",\n  initialState,\n  reducers: {\n    changeBoxType: (state, action: PayloadAction<AuthFormTypes>) => {\n      state.type = action.payload;\n    },\n    saveLoginResult: (state, action: PayloadAction<LogResponse>) => {\n      state.login = action.payload;\n    },\n    saveError: (state, { payload }) => {\n      state.error = payload;\n    },\n    clearForm: (state) => {\n      return { ...initialState, type: state.type };\n    },\n  },\n});\n\nexport const {\n  changeBoxType,\n  saveLoginResult,\n  clearForm,\n  saveError,\n} = authSlice.actions;\n\nexport const authReducer = authSlice.reducer;\n\nexport const getFormType = (state: RootState) => state.authentication.type;\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/selectors.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/middleware.ts",["124","125","126"],"import { AnyAction, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { RootStateOrAny } from \"react-redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { commonThunk } from \"../../../utils/apiHelpers\";\nimport { AnyThunkDispatch } from \"../../../utils/types\";\nimport { INST_SENT_TYPE, LOG_IN_TYPE } from \"../constants\";\nimport {\n  logRequest,\n  newPassRequest,\n  regRequest,\n  updateRequest,\n} from \"./loginApi\";\nimport { changeBoxType, saveError, saveLoginResult } from \"./reducer\";\n\nexport const logUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await logRequest(body);\n\n  if (res?.error) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const regUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await regRequest(body);\n\n  if (res?.error || res?.message) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const requestNewPass = (body: any) =>\n  commonThunk(\n    () => newPassRequest(body),\n    () => changeBoxType(INST_SENT_TYPE),\n    (res: any) => saveError(res.message)\n  );\n\nexport const updatePassword = () =>\n  commonThunk(updateRequest, (res: any) => saveError(res.message));\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/loginApi.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/utils/apiHelpers.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/components/AddPlus.tsx",["127"],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./addPlus.scss\";\nimport { ReactComponent as Plus } from \"../../../assets/plus.svg\";\nimport giftlogo from \"../../../assets/giftlogo.svg\";\nimport folderlogo from \"../../../assets/folderlogo.svg\";\nimport calendarlogo from \"../../../assets/calendarlogo.svg\";\n\ntype EllipseProps = {\n  icon?: string;\n  text?: string;\n};\n\nconst EllipseOption = ({\n  icon,\n  text,\n}: EllipseProps) => {\n  return (\n    <button className=\"option-button\">\n      <img className=\"icon\" src={icon} />\n      <span>{text}</span>\n    </button>\n  );\n};\n\nexport default function AddPlus() {\n  const [opened, setOpened] = useState(false);\n\n  function handleOpen() {\n    setOpened(!opened);\n  }\n\n  return (\n    <>\n      <div\n        onClick={handleOpen}\n        className={`add-button ${opened ? \"opened\" : \"closed\"}`}\n      >\n        <Plus />\n      </div>\n      {opened && (\n        <div>\n          <div className='upper-item'>\n            <EllipseOption icon={giftlogo} text=\"ЖЕЛАНИЕ\" />\n          </div>\n          <div className='middle-item'>\n            <EllipseOption icon={folderlogo} text=\"ДОСКУ\" />\n          </div>\n          <div className='lower-item'>\n            <EllipseOption icon={calendarlogo} text=\"СОБЫТИЕ\" />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/index.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/Modal.tsx",["128"],"import React, { memo, useMemo } from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./modal.scss\";\n\nfunction closureAddRemoveModal(): [Element, Function] {\n  let created: boolean = false;\n  const div = document.createElement(\"div\");\n  div.setAttribute(\"id\", `modal ${Date.now().toString()}`);\n\n  return [\n    div,\n    (toRemove?: boolean) => {\n      if (toRemove) {\n        div.remove();\n      }\n\n      if (!created) {\n        document.getElementById(\"root\")?.appendChild(div);\n        created = true;\n      }\n    },\n  ];\n}\n\ntype ModalProps = {\n  toShow?: boolean;\n  handleBlur?: Function;\n  children?: JSX.Element;\n  content: JSX.Element;\n};\n// TODO: add default close button and ok button\nfunction Modal({ toShow, children, content }: ModalProps): JSX.Element | null {\n  const [elem, addRemoveModal] = useMemo(closureAddRemoveModal, []);\n  const [isToShow, setIsToShow] = useState(!!toShow);\n  const elemRef = useRef<Element>(elem);\n\n  useEffect(() => {\n    setIsToShow(!!toShow);\n  }, [toShow]);\n\n  useEffect(() => {\n    addRemoveModal();\n\n    return () => addRemoveModal(true);\n  }, []);\n\n  function handleShow() {\n    setIsToShow(true);\n  }\n\n  function handleClose() {\n    setIsToShow(false);\n  }\n\n  return (\n    <>\n      <div onClick={handleShow}>{children}</div>\n      {isToShow &&\n        ReactDOM.createPortal(\n          <div className=\"modal\">\n            <div className=\"modal-mask\" onClick={handleClose} />\n            <div className=\"modal-content-container\">\n              {content}\n            </div>\n          </div>,\n          elemRef.current\n        )}\n    </>\n  );\n}\n\nexport default memo(Modal);\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/CardFlow/components/WishCard/WishCard.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/CardFlow/CardContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/CardFlow/components/WishCard/AddCard.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/utils/functions.ts",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":13,"column":22,"nodeType":"135","messageId":"136","endLine":13,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":12,"column":7,"nodeType":"139","endLine":12,"endColumn":49},{"ruleId":"133","severity":1,"message":"140","line":14,"column":10,"nodeType":"135","messageId":"136","endLine":14,"endColumn":19},{"ruleId":"133","severity":1,"message":"141","line":3,"column":25,"nodeType":"135","messageId":"136","endLine":3,"endColumn":38},{"ruleId":"133","severity":1,"message":"142","line":1,"column":21,"nodeType":"135","messageId":"136","endLine":1,"endColumn":34},{"ruleId":"133","severity":1,"message":"143","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":26},{"ruleId":"133","severity":1,"message":"144","line":6,"column":26,"nodeType":"135","messageId":"136","endLine":6,"endColumn":37},{"ruleId":"137","severity":1,"message":"138","line":20,"column":7,"nodeType":"139","endLine":20,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":48,"column":6,"nodeType":"147","endLine":48,"endColumn":8,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'setAuthStatus' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'TO_EMAIL_TYPE' is defined but never used.","'ThunkDispatch' is defined but never used.","'AnyThunkDispatch' is defined but never used.","'LOG_IN_TYPE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addRemoveModal'. Either include it or remove the dependency array.","ArrayExpression",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [addRemoveModal]",{"range":"154","text":"155"},[1192,1194],"[addRemoveModal]"]