[{"C:\\wishes\\WishApp\\src\\index.tsx":"1","C:\\wishes\\WishApp\\src\\reportWebVitals.ts":"2","C:\\wishes\\WishApp\\src\\store.ts":"3","C:\\wishes\\WishApp\\src\\App.tsx":"4","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\reducer.ts":"5","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\AuthContainer.tsx":"6","C:\\wishes\\WishApp\\src\\modules\\ActivityContainer\\ActivityContainer.tsx":"7","C:\\wishes\\WishApp\\src\\modules\\Sidebar\\Sidebar.tsx":"8","C:\\wishes\\WishApp\\src\\modules\\Header\\Header.tsx":"9","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\selectors.ts":"10","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\constants.ts":"11","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\LogFooter.tsx":"12","C:\\wishes\\WishApp\\src\\modules\\ActivityContainer\\components\\WishCard.tsx":"13","C:\\wishes\\WishApp\\src\\modules\\SidebarHeader\\SidebarHeader.tsx":"14","C:\\wishes\\WishApp\\src\\modules\\UserAppearance\\UserAppearance.tsx":"15","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\components\\Button.tsx":"16","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\dataInputComponent.tsx":"17","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\middleware.ts":"18","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\LogHeader.tsx":"19","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\loginApi.ts":"20","C:\\wishes\\WishApp\\src\\utils\\apiHelpers.ts":"21","C:\\wishes\\WishApp\\src\\components\\Modal\\Modal.tsx":"22","C:\\wishes\\WishApp\\src\\components\\Checkbox\\CheckBox.tsx":"23","C:\\wishes\\WishApp\\src\\components\\TextArea\\TextArea.tsx":"24","C:\\wishes\\WishApp\\src\\components\\DropDown\\DropDown.tsx":"25","C:\\wishes\\WishApp\\src\\components\\LinkInput\\LinkInput.tsx":"26","C:\\wishes\\WishApp\\src\\components\\Checkbox\\CheckBoxCurrency.tsx":"27","C:\\wishes\\WishApp\\src\\components\\ButtonAddPicture\\ButtonAddPicture.tsx":"28","C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\reducer.ts":"29","C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\selectors.ts":"30","C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\middleware.ts":"31","C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\wishesApi.ts":"32","C:\\wishes\\WishApp\\src\\components\\Modal\\hooks\\useHookModal.ts":"33","C:\\wishes\\WishApp\\src\\components\\Modal\\constants\\constants.ts":"34","C:\\wishes\\WishApp\\src\\modules\\DashBoard\\DashBoard.tsx":"35","C:\\wishes\\WishApp\\src\\modules\\Actions\\Actions.tsx":"36","C:\\wishes\\WishApp\\src\\modules\\Blog\\Blog.tsx":"37"},{"size":620,"mtime":1637486885709,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1637486885718,"results":"40","hashOfConfig":"39"},{"size":784,"mtime":1639820252848,"results":"41","hashOfConfig":"39"},{"size":1878,"mtime":1641317966539,"results":"42","hashOfConfig":"39"},{"size":1126,"mtime":1639822411607,"results":"43","hashOfConfig":"39"},{"size":2516,"mtime":1638105627663,"results":"44","hashOfConfig":"39"},{"size":889,"mtime":1638298376125,"results":"45","hashOfConfig":"39"},{"size":1542,"mtime":1641317591577,"results":"46","hashOfConfig":"39"},{"size":1090,"mtime":1640634905463,"results":"47","hashOfConfig":"39"},{"size":125,"mtime":1637486885716,"results":"48","hashOfConfig":"39"},{"size":672,"mtime":1639819974538,"results":"49","hashOfConfig":"39"},{"size":580,"mtime":1637486885713,"results":"50","hashOfConfig":"39"},{"size":781,"mtime":1637486885710,"results":"51","hashOfConfig":"39"},{"size":336,"mtime":1637486885717,"results":"52","hashOfConfig":"39"},{"size":557,"mtime":1641318218740,"results":"53","hashOfConfig":"39"},{"size":1203,"mtime":1637486885713,"results":"54","hashOfConfig":"39"},{"size":7295,"mtime":1639821591392,"results":"55","hashOfConfig":"39"},{"size":1299,"mtime":1639819820806,"results":"56","hashOfConfig":"39"},{"size":440,"mtime":1637486885713,"results":"57","hashOfConfig":"39"},{"size":404,"mtime":1639819811514,"results":"58","hashOfConfig":"39"},{"size":1261,"mtime":1640422596607,"results":"59","hashOfConfig":"39"},{"size":4684,"mtime":1640517886278,"results":"60","hashOfConfig":"39"},{"size":411,"mtime":1640518212234,"results":"61","hashOfConfig":"39"},{"size":1106,"mtime":1640285234150,"results":"62","hashOfConfig":"39"},{"size":457,"mtime":1638716469623,"results":"63","hashOfConfig":"39"},{"size":694,"mtime":1640285175372,"results":"64","hashOfConfig":"39"},{"size":1255,"mtime":1640289186557,"results":"65","hashOfConfig":"39"},{"size":1460,"mtime":1640857952362,"results":"66","hashOfConfig":"39"},{"size":995,"mtime":1640424822693,"results":"67","hashOfConfig":"39"},{"size":123,"mtime":1639822790823,"results":"68","hashOfConfig":"39"},{"size":553,"mtime":1640424898492,"results":"69","hashOfConfig":"39"},{"size":215,"mtime":1640461804245,"results":"70","hashOfConfig":"39"},{"size":3527,"mtime":1640521719285,"results":"71","hashOfConfig":"39"},{"size":310,"mtime":1640518490134,"results":"72","hashOfConfig":"39"},{"size":70,"mtime":1640635743470,"results":"73","hashOfConfig":"39"},{"size":66,"mtime":1640635708931,"results":"74","hashOfConfig":"39"},{"size":60,"mtime":1640635683308,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"awa6oh",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\wishes\\WishApp\\src\\index.tsx",[],["157","158"],"C:\\wishes\\WishApp\\src\\reportWebVitals.ts",[],"C:\\wishes\\WishApp\\src\\store.ts",[],"C:\\wishes\\WishApp\\src\\App.tsx",["159","160"],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\reducer.ts",["161"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../store\";\nimport { AuthFormTypes, TO_EMAIL_TYPE } from \"../constants\";\n\ntype LogResponse = {\n  [key: string]: string | number | undefined;\n};\n\ninterface AuthState {\n  type: AuthFormTypes;\n  login: LogResponse;\n  error: string;\n}\n\nconst initialState: AuthState = {\n  type: \"LOGIN\",\n  login: {},\n  error: \"\",\n};\n\nexport const authSlice = createSlice({\n  name: \"authentication\",\n  initialState,\n  reducers: {\n    changeBoxType: (state, action: PayloadAction<AuthFormTypes>) => {\n      state.type = action.payload;\n    },\n    saveLoginResult: (state, action: PayloadAction<LogResponse>) => {\n      state.login = action.payload;\n    },\n    saveError: (state, { payload }) => {\n      state.error = payload;\n    },\n    clearForm: (state) => {\n      return { ...initialState, type: state.type };\n    },\n  },\n});\n\nexport const {\n  changeBoxType,\n  saveLoginResult,\n  clearForm,\n  saveError,\n} = authSlice.actions;\n\nexport const authReducer = authSlice.reducer;\n\nexport const getFormType = (state: RootState) => state.authentication.type;\n","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\AuthContainer.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\ActivityContainer\\ActivityContainer.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\Sidebar\\Sidebar.tsx",["162","163","164","165"],"import {\n  withRouter,\n  useHistory,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport { SidebarHeader } from \"../SidebarHeader/SidebarHeader\";\n\nimport \"./sidebar.scss\";\nimport { ReactComponent as GiftLogo } from \"../../assets/gift.svg\";\nimport { ReactComponent as DeskLogo } from \"../../assets/folder.svg\";\nimport { ReactComponent as EventLogo } from \"../../assets/calendar.svg\";\nimport { ReactComponent as BlogLogo } from \"../../assets/pen.svg\";\nimport { ReactComponent as BowLogo } from \"../../assets/bow.svg\";\nimport { ReactComponent as InviteText } from \"../../assets/invite.svg\";\n\nconst Side = () => {\n  // let history = useHistory();\n\n  return (\n    <div className=\"sidebar style-wrapper\">\n      <SidebarHeader />\n      <ul>\n        <li>\n          <Link to=\"/wishes\">\n            <GiftLogo className=\"logo\" />\n            Желания\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/dashboard\">\n            <EventLogo className=\"logo\" />\n            Доски\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/about\">\n            <DeskLogo className=\"logo\" />\n            События\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">\n            <BlogLogo className=\"logo\" />\n            Блог\n          </Link>\n        </li>\n      </ul>\n      <div className=\"invite-block\">\n        <BowLogo className=\"bow-logo\" />\n        <InviteText />\n      </div>\n    </div>\n  );\n};\n\nconst Sidebar = withRouter(Side);\nexport default Sidebar;\n","C:\\wishes\\WishApp\\src\\modules\\Header\\Header.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\selectors.ts",[],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\constants.ts",[],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\LogFooter.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\ActivityContainer\\components\\WishCard.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\SidebarHeader\\SidebarHeader.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\UserAppearance\\UserAppearance.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\components\\Button.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\dataInputComponent.tsx",["166"],"import React, { ChangeEventHandler, useState } from \"react\";\nimport {\n  LOG_IN_TYPE,\n  SIGN_UP_TYPE,\n  NEW_PASS_TYPE,\n  TO_EMAIL_TYPE,\n  AuthFormTypes,\n  FormConstructData,\n  FormValues,\n  INST_SENT_TYPE,\n} from \"./constants\";\nimport \"./authPage.scss\";\nimport { Button } from \"./components/Button\";\nimport { useEffect } from \"react\";\nimport { LogHeader } from \"./LogHeader\";\nimport { useAuth } from \"./redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { changeBoxType, saveError } from \"./redux/reducer\";\nimport {\n  logUser,\n  regUser,\n  requestNewPass,\n  updatePassword,\n} from \"./redux/middleware\";\n\nconst LOG_HEADER = \"Организовывайте свои идеи подарков и мероприятий\";\nconst FORGET_HEADER = [\"Забыли пароль?\", \"Такое случается с лучшими из нас\"];\nconst INSTR_HEADER = \"Инструкция отправлена!\";\nconst NEW_PASS_HEADER = [\n  \"Изменение пароля\",\n  \"Длина пароля должна быть не менее 8 символов\",\n];\n\nconst EMAIL_PH = \"Email\";\nconst PASSWORD_PH = \"Пароль\";\nconst NEW_PASSWORD_PH = \"Введите новый пароль\";\nconst REPEAT_NEW_PASSWORD_PH = \"Повторите пароль\";\n\nconst LOGIN = \"ВОЙТИ\";\nconst CONTINUE = \"ПРОДОЛЖИТЬ\";\nconst SEND_INSTRUCTION = \"ОТПРАВИТЬ ИНСТРУКЦИЮ\";\nconst CHANGE_PASSWORD = \"ИЗМЕНИТЬ ПАРОЛЬ\";\n\nconst RECOVERY_HELP = \"Забыли пароль?\";\nconst ERROR_LOGIN_MESSAGE =\n  \"Неправильный логин или пароль. Может быть вы забыли пароль?\";\nconst ERROR_EMAIL_ADDRESS_MESSAGE =\n  \"Кажется, вы ввели некорректный адрес, проверьте еще раз\";\nconst ERROR_UNMATCH = \"Пароли не совпадают\";\n\nfunction selectConstructObject(type: AuthFormTypes): FormConstructData {\n  switch (type) {\n    case LOG_IN_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n    case SIGN_UP_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: CONTINUE,\n        header: LOG_HEADER,\n      };\n    case TO_EMAIL_TYPE:\n      return {\n        inputs: [{ name: \"email\", placeholder: EMAIL_PH }],\n        submitButton: SEND_INSTRUCTION,\n        errorMsg: ERROR_EMAIL_ADDRESS_MESSAGE,\n        header: FORGET_HEADER,\n      };\n    case NEW_PASS_TYPE:\n      return {\n        inputs: [\n          { name: \"password\", placeholder: NEW_PASSWORD_PH },\n          { name: \"repeatPassword\", placeholder: REPEAT_NEW_PASSWORD_PH },\n        ],\n        submitButton: CHANGE_PASSWORD,\n        errorMsg: ERROR_UNMATCH,\n        header: NEW_PASS_HEADER,\n      };\n    default:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n  }\n}\n\nfunction constructForm(\n  constructData: FormConstructData,\n  inputValues: FormValues,\n  changeInput: ChangeEventHandler,\n  onSubmit: any,\n  error?: boolean | string,\n  changeForm?: any\n) {\n  const editOnce = (function () {\n    //TODO - change function to css define\n    let isFirst = true;\n\n    return () => {\n      if (isFirst) {\n        isFirst = false;\n        return \"first\";\n      }\n      return \"\";\n    };\n  })();\n\n  const passQuestion = constructData.passwordRecovery;\n\n  const checkInputEmptiness =\n    Object.values(inputValues).length >= constructData.inputs.length &&\n    Object.values(inputValues).every((value) => !!value);\n\n  return (\n    <form>\n      {error && (\n        <div className=\"error-message\">{constructData.errorMsg || error}</div>\n      )}\n      {constructData.inputs.map((elem) => (\n        <input\n          className={`${editOnce()} ${error && \"input-warning\"}`}\n          name={elem.name}\n          placeholder={elem.placeholder || \"\"}\n          onChange={changeInput}\n        />\n      ))}\n      {passQuestion && (\n        <div className=\"passQuestion\">\n          <div className=\"bold\" onClick={changeForm}>\n            {constructData.passwordRecovery}\n          </div>\n        </div>\n      )}\n      {\n        <Button\n          onClick={onSubmit}\n          isDisabled={!checkInputEmptiness}\n          className={passQuestion ? \"close-button\" : \"\"}\n        >\n          {constructData.submitButton}\n        </Button>\n      }\n    </form>\n  );\n}\n\nconst SendDescription: React.FC<{ email?: string }> = ({ email }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <LogHeader header={INSTR_HEADER} />\n      <p>Вы получите наше письмо в течение 5 минут</p>\n      <p style={{ fontWeight: 600 }}>{email}</p>\n      <p>\n        {\"Не приходит письмо? Убедитесь, что оно не попало в папку спам. \"}\n        <span\n          onClick={() => {\n            dispatch(changeBoxType(INST_SENT_TYPE));\n            dispatch(requestNewPass(email));\n          }}\n          className=\"footer-link\"\n        >\n          Отправить еще раз\n        </span>\n      </p>\n    </>\n  );\n};\n\nexport const DataInputComponent = () => {\n  const dispatch = useDispatch();\n  const { error: errorMsg, type } = useAuth();\n\n  const [formData, setFormData] = useState<any>({});\n  const constructObject = selectConstructObject(type);\n\n  function onSubmit(formData: any) {\n    console.log(formData);\n    switch (type) {\n      case LOG_IN_TYPE: {\n        dispatch(logUser(formData));\n        break;\n      }\n      case SIGN_UP_TYPE: {\n        dispatch(regUser(formData));\n        break;\n      }\n      case TO_EMAIL_TYPE: {\n        dispatch(requestNewPass(formData));\n        dispatch(changeBoxType(INST_SENT_TYPE));\n        break;\n      }\n      case NEW_PASS_TYPE: {\n        dispatch(updatePassword());\n        break;\n      }\n    }\n  }\n\n  function changeFormData(event: any) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    dispatch(saveError(\"\"));\n  }\n\n  function changeForm() {\n    dispatch(changeBoxType(TO_EMAIL_TYPE));\n  }\n\n  const headerProps = (function () {\n    const { header } = constructObject;\n    if (Array.isArray(header)) {\n      return {\n        header: header[0],\n        additional: header[1],\n      };\n    }\n    return { header } as { header: string };\n  })();\n\n  // useEffect(() => {\n  //   const initial: FormValues = {};\n  //   setFormData(initial);\n  // }, [type]);\n\n  if (type === INST_SENT_TYPE) {\n    return <SendDescription email={formData?.email} />;\n  }\n\n  return (\n    <>\n      <LogHeader {...headerProps} />\n      {constructForm(\n        constructObject,\n        formData,\n        changeFormData,\n        () => onSubmit(formData),\n        errorMsg,\n        changeForm\n      )}\n    </>\n  );\n};\n","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\middleware.ts",["167","168","169"],"import { AnyAction, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { RootStateOrAny } from \"react-redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { commonThunk } from \"../../../utils/apiHelpers\";\nimport { AnyThunkDispatch } from \"../../../utils/types\";\nimport { INST_SENT_TYPE, LOG_IN_TYPE } from \"../constants\";\nimport {\n  logRequest,\n  newPassRequest,\n  regRequest,\n  updateRequest,\n} from \"./loginApi\";\nimport { changeBoxType, saveError, saveLoginResult } from \"./reducer\";\n\nexport const logUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await logRequest(body);\n\n  if (res?.error) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const regUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await regRequest(body);\n\n  if (res?.error || res?.message) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const requestNewPass = (body: any) =>\n  commonThunk(\n    () => newPassRequest(body),\n    () => changeBoxType(INST_SENT_TYPE),\n    (res: any) => saveError(res.message)\n  );\n\nexport const updatePassword = () =>\n  commonThunk(updateRequest, (res: any) => saveError(res.message));\n","C:\\wishes\\WishApp\\src\\modules\\LoginPage\\LogHeader.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\LoginPage\\redux\\loginApi.ts",[],"C:\\wishes\\WishApp\\src\\utils\\apiHelpers.ts",[],"C:\\wishes\\WishApp\\src\\components\\Modal\\Modal.tsx",[],"C:\\wishes\\WishApp\\src\\components\\Checkbox\\CheckBox.tsx",[],"C:\\wishes\\WishApp\\src\\components\\TextArea\\TextArea.tsx",[],"C:\\wishes\\WishApp\\src\\components\\DropDown\\DropDown.tsx",[],"C:\\wishes\\WishApp\\src\\components\\LinkInput\\LinkInput.tsx",[],"C:\\wishes\\WishApp\\src\\components\\Checkbox\\CheckBoxCurrency.tsx",[],"C:\\wishes\\WishApp\\src\\components\\ButtonAddPicture\\ButtonAddPicture.tsx",["170"],"import AddImage from \"../../assets/addImage.svg\";\r\nimport \"./buttonAddPicture.scss\";\r\n\r\ntype Props = {\r\n  handlerSendPicture: any;\r\n  preview: any;\r\n  selectedFile: any;\r\n};\r\n\r\nexport const ButtonAddPicture = ({\r\n  handlerSendPicture,\r\n  preview,\r\n  selectedFile,\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      <input\r\n        accept=\"image/*\"\r\n        style={{ display: \"none\" }}\r\n        id=\"raised-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={handlerSendPicture}\r\n      />\r\n      <label htmlFor=\"raised-button-file\">\r\n        {selectedFile ? (\r\n          <>\r\n            <div className=\"previewImage\">\r\n              <img src={preview} />\r\n              <div className=\"previewimageEffect\" />\r\n              <div className=\"addImageText\">\r\n                <img src={AddImage} alt=\"AddImage\" />\r\n                <span className=\"descriptionImage\">\r\n                  Перетащите изображение сюда или нажмите{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"addImage\">\r\n            <div className=\"addImageText\">\r\n              <img src={AddImage} alt=\"AddImage\" />\r\n              <span className=\"descriptionImage\">\r\n                Перетащите изображение сюда или нажмите{\" \"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n","C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\reducer.ts",[],"C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\selectors.ts",[],["171","172"],"C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\middleware.ts",[],"C:\\wishes\\WishApp\\src\\components\\Modal\\redux\\wishesApi.ts",[],"C:\\wishes\\WishApp\\src\\components\\Modal\\hooks\\useHookModal.ts",[],"C:\\wishes\\WishApp\\src\\components\\Modal\\constants\\constants.ts",[],"C:\\wishes\\WishApp\\src\\modules\\DashBoard\\DashBoard.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\Actions\\Actions.tsx",[],"C:\\wishes\\WishApp\\src\\modules\\Blog\\Blog.tsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":20},{"ruleId":"177","severity":1,"message":"181","line":15,"column":22,"nodeType":"179","messageId":"180","endLine":15,"endColumn":35},{"ruleId":"177","severity":1,"message":"182","line":3,"column":25,"nodeType":"179","messageId":"180","endLine":3,"endColumn":38},{"ruleId":"177","severity":1,"message":"183","line":3,"column":3,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"184","line":4,"column":20,"nodeType":"179","messageId":"180","endLine":4,"endColumn":26},{"ruleId":"177","severity":1,"message":"185","line":5,"column":3,"nodeType":"179","messageId":"180","endLine":5,"endColumn":9},{"ruleId":"177","severity":1,"message":"186","line":6,"column":3,"nodeType":"179","messageId":"180","endLine":6,"endColumn":8},{"ruleId":"177","severity":1,"message":"187","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":19},{"ruleId":"177","severity":1,"message":"188","line":1,"column":21,"nodeType":"179","messageId":"180","endLine":1,"endColumn":34},{"ruleId":"177","severity":1,"message":"189","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":26},{"ruleId":"177","severity":1,"message":"190","line":6,"column":26,"nodeType":"179","messageId":"180","endLine":6,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":29,"column":15,"nodeType":"193","endLine":29,"endColumn":36},{"ruleId":"173","replacedBy":"194"},{"ruleId":"175","replacedBy":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"@typescript-eslint/no-unused-vars","'authStatus' is assigned a value but never used.","Identifier","unusedVar","'setAuthStatus' is assigned a value but never used.","'TO_EMAIL_TYPE' is defined but never used.","'useHistory' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'ThunkDispatch' is defined but never used.","'AnyThunkDispatch' is defined but never used.","'LOG_IN_TYPE' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["196"],["197"],"no-global-assign","no-unsafe-negation"]