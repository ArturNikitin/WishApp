[{"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx":"1","/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts":"2","/Users/vlad.zakharchev/Work/WishApp/src/App.tsx":"3","/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx":"4","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx":"5","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx":"6","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/components/WishCard.tsx":"7","/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx":"8","/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx":"9","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx":"10","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts":"11","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx":"12","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx":"13","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx":"14","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogFooter.tsx":"15","/Users/vlad.zakharchev/Work/WishApp/src/store.ts":"16","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/reducer.ts":"17","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/selectors.ts":"18","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/middleware.ts":"19","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/loginApi.ts":"20","/Users/vlad.zakharchev/Work/WishApp/src/utils/apiHelpers.ts":"21","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/components/AddPlus.tsx":"22","/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/index.ts":"23","/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/Modal.tsx":"24"},{"size":620,"mtime":1630940555020,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1624353155247,"results":"27","hashOfConfig":"26"},{"size":1149,"mtime":1640693742445,"results":"28","hashOfConfig":"26"},{"size":957,"mtime":1637075842796,"results":"29","hashOfConfig":"26"},{"size":476,"mtime":1640617022297,"results":"30","hashOfConfig":"26"},{"size":2089,"mtime":1640618777372,"results":"31","hashOfConfig":"26"},{"size":852,"mtime":1639219464416,"results":"32","hashOfConfig":"26"},{"size":434,"mtime":1640618493177,"results":"33","hashOfConfig":"26"},{"size":336,"mtime":1624353155246,"results":"34","hashOfConfig":"26"},{"size":2516,"mtime":1634379900353,"results":"35","hashOfConfig":"26"},{"size":655,"mtime":1633256364055,"results":"36","hashOfConfig":"26"},{"size":7295,"mtime":1634380044464,"results":"37","hashOfConfig":"26"},{"size":440,"mtime":1632236894782,"results":"38","hashOfConfig":"26"},{"size":1203,"mtime":1634384950613,"results":"39","hashOfConfig":"26"},{"size":580,"mtime":1634384553972,"results":"40","hashOfConfig":"26"},{"size":690,"mtime":1626561227260,"results":"41","hashOfConfig":"26"},{"size":1126,"mtime":1634384194229,"results":"42","hashOfConfig":"26"},{"size":125,"mtime":1631034533020,"results":"43","hashOfConfig":"26"},{"size":1299,"mtime":1640463721911,"results":"44","hashOfConfig":"26"},{"size":404,"mtime":1634376377275,"results":"45","hashOfConfig":"26"},{"size":1261,"mtime":1639826461574,"results":"46","hashOfConfig":"26"},{"size":1428,"mtime":1637069975438,"results":"47","hashOfConfig":"26"},{"size":34,"mtime":1640618331278,"results":"48","hashOfConfig":"26"},{"size":1833,"mtime":1640693471383,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"pks9ao",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx",[],["105","106"],"/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/App.tsx",["107"],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/components/WishCard.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx",["108"],"import React from \"react\";\nimport './appearance.scss';\n\nimport { ReactComponent as UncoverIcon } from '../../assets/uncoverIcon.svg';\n\nexport const UserAppearance = function(props: {imgSource: string, email?: string}) {\n  const { imgSource, email } = props;\n\n  return(\n    <div className=\"user-appereance\">\n      <UncoverIcon/>\n      <img src={imgSource} className=\"avatar \"/>\n      {email && <span>@{email}</span>}\n    </div>\n  );\n};","/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx",["109"],"import React, { ChangeEventHandler, useState } from \"react\";\nimport {\n  LOG_IN_TYPE,\n  SIGN_UP_TYPE,\n  NEW_PASS_TYPE,\n  TO_EMAIL_TYPE,\n  AuthFormTypes,\n  FormConstructData,\n  FormValues,\n  INST_SENT_TYPE,\n} from \"./constants\";\nimport \"./authPage.scss\";\nimport { Button } from \"./components/Button\";\nimport { useEffect } from \"react\";\nimport { LogHeader } from \"./LogHeader\";\nimport { useAuth } from \"./redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { changeBoxType, saveError } from \"./redux/reducer\";\nimport {\n  logUser,\n  regUser,\n  requestNewPass,\n  updatePassword,\n} from \"./redux/middleware\";\n\nconst LOG_HEADER = \"Организовывайте свои идеи подарков и мероприятий\";\nconst FORGET_HEADER = [\"Забыли пароль?\", \"Такое случается с лучшими из нас\"];\nconst INSTR_HEADER = \"Инструкция отправлена!\";\nconst NEW_PASS_HEADER = [\n  \"Изменение пароля\",\n  \"Длина пароля должна быть не менее 8 символов\",\n];\n\nconst EMAIL_PH = \"Email\";\nconst PASSWORD_PH = \"Пароль\";\nconst NEW_PASSWORD_PH = \"Введите новый пароль\";\nconst REPEAT_NEW_PASSWORD_PH = \"Повторите пароль\";\n\nconst LOGIN = \"ВОЙТИ\";\nconst CONTINUE = \"ПРОДОЛЖИТЬ\";\nconst SEND_INSTRUCTION = \"ОТПРАВИТЬ ИНСТРУКЦИЮ\";\nconst CHANGE_PASSWORD = \"ИЗМЕНИТЬ ПАРОЛЬ\";\n\nconst RECOVERY_HELP = \"Забыли пароль?\";\nconst ERROR_LOGIN_MESSAGE =\n  \"Неправильный логин или пароль. Может быть вы забыли пароль?\";\nconst ERROR_EMAIL_ADDRESS_MESSAGE =\n  \"Кажется, вы ввели некорректный адрес, проверьте еще раз\";\nconst ERROR_UNMATCH = \"Пароли не совпадают\";\n\nfunction selectConstructObject(type: AuthFormTypes): FormConstructData {\n  switch (type) {\n    case LOG_IN_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n    case SIGN_UP_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: CONTINUE,\n        header: LOG_HEADER,\n      };\n    case TO_EMAIL_TYPE:\n      return {\n        inputs: [{ name: \"email\", placeholder: EMAIL_PH }],\n        submitButton: SEND_INSTRUCTION,\n        errorMsg: ERROR_EMAIL_ADDRESS_MESSAGE,\n        header: FORGET_HEADER,\n      };\n    case NEW_PASS_TYPE:\n      return {\n        inputs: [\n          { name: \"password\", placeholder: NEW_PASSWORD_PH },\n          { name: \"repeatPassword\", placeholder: REPEAT_NEW_PASSWORD_PH },\n        ],\n        submitButton: CHANGE_PASSWORD,\n        errorMsg: ERROR_UNMATCH,\n        header: NEW_PASS_HEADER,\n      };\n    default:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n  }\n}\n\nfunction constructForm(\n  constructData: FormConstructData,\n  inputValues: FormValues,\n  changeInput: ChangeEventHandler,\n  onSubmit: any,\n  error?: boolean | string,\n  changeForm?: any\n) {\n  const editOnce = (function () {\n    //TODO - change function to css define\n    let isFirst = true;\n\n    return () => {\n      if (isFirst) {\n        isFirst = false;\n        return \"first\";\n      }\n      return \"\";\n    };\n  })();\n\n  const passQuestion = constructData.passwordRecovery;\n\n  const checkInputEmptiness =\n    Object.values(inputValues).length >= constructData.inputs.length &&\n    Object.values(inputValues).every((value) => !!value);\n\n  return (\n    <form>\n      {error && (\n        <div className=\"error-message\">{constructData.errorMsg || error}</div>\n      )}\n      {constructData.inputs.map((elem) => (\n        <input\n          className={`${editOnce()} ${error && \"input-warning\"}`}\n          name={elem.name}\n          placeholder={elem.placeholder || \"\"}\n          onChange={changeInput}\n        />\n      ))}\n      {passQuestion && (\n        <div className=\"passQuestion\">\n          <div className=\"bold\" onClick={changeForm}>\n            {constructData.passwordRecovery}\n          </div>\n        </div>\n      )}\n      {\n        <Button\n          onClick={onSubmit}\n          isDisabled={!checkInputEmptiness}\n          className={passQuestion ? \"close-button\" : \"\"}\n        >\n          {constructData.submitButton}\n        </Button>\n      }\n    </form>\n  );\n}\n\nconst SendDescription: React.FC<{ email?: string }> = ({ email }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <LogHeader header={INSTR_HEADER} />\n      <p>Вы получите наше письмо в течение 5 минут</p>\n      <p style={{ fontWeight: 600 }}>{email}</p>\n      <p>\n        {\"Не приходит письмо? Убедитесь, что оно не попало в папку спам. \"}\n        <span\n          onClick={() => {\n            dispatch(changeBoxType(INST_SENT_TYPE));\n            dispatch(requestNewPass(email));\n          }}\n          className=\"footer-link\"\n        >\n          Отправить еще раз\n        </span>\n      </p>\n    </>\n  );\n};\n\nexport const DataInputComponent = () => {\n  const dispatch = useDispatch();\n  const { error: errorMsg, type } = useAuth();\n\n  const [formData, setFormData] = useState<any>({});\n  const constructObject = selectConstructObject(type);\n\n  function onSubmit(formData: any) {\n    console.log(formData);\n    switch (type) {\n      case LOG_IN_TYPE: {\n        dispatch(logUser(formData));\n        break;\n      }\n      case SIGN_UP_TYPE: {\n        dispatch(regUser(formData));\n        break;\n      }\n      case TO_EMAIL_TYPE: {\n        dispatch(requestNewPass(formData));\n        dispatch(changeBoxType(INST_SENT_TYPE));\n        break;\n      }\n      case NEW_PASS_TYPE: {\n        dispatch(updatePassword());\n        break;\n      }\n    }\n  }\n\n  function changeFormData(event: any) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    dispatch(saveError(\"\"));\n  }\n\n  function changeForm() {\n    dispatch(changeBoxType(TO_EMAIL_TYPE));\n  }\n\n  const headerProps = (function () {\n    const { header } = constructObject;\n    if (Array.isArray(header)) {\n      return {\n        header: header[0],\n        additional: header[1],\n      };\n    }\n    return { header } as { header: string };\n  })();\n\n  // useEffect(() => {\n  //   const initial: FormValues = {};\n  //   setFormData(initial);\n  // }, [type]);\n\n  if (type === INST_SENT_TYPE) {\n    return <SendDescription email={formData?.email} />;\n  }\n\n  return (\n    <>\n      <LogHeader {...headerProps} />\n      {constructForm(\n        constructObject,\n        formData,\n        changeFormData,\n        () => onSubmit(formData),\n        errorMsg,\n        changeForm\n      )}\n    </>\n  );\n};\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogFooter.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/store.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/reducer.ts",["110"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../store\";\nimport { AuthFormTypes, TO_EMAIL_TYPE } from \"../constants\";\n\ntype LogResponse = {\n  [key: string]: string | number | undefined;\n};\n\ninterface AuthState {\n  type: AuthFormTypes;\n  login: LogResponse;\n  error: string;\n}\n\nconst initialState: AuthState = {\n  type: \"LOGIN\",\n  login: {},\n  error: \"\",\n};\n\nexport const authSlice = createSlice({\n  name: \"authentication\",\n  initialState,\n  reducers: {\n    changeBoxType: (state, action: PayloadAction<AuthFormTypes>) => {\n      state.type = action.payload;\n    },\n    saveLoginResult: (state, action: PayloadAction<LogResponse>) => {\n      state.login = action.payload;\n    },\n    saveError: (state, { payload }) => {\n      state.error = payload;\n    },\n    clearForm: (state) => {\n      return { ...initialState, type: state.type };\n    },\n  },\n});\n\nexport const {\n  changeBoxType,\n  saveLoginResult,\n  clearForm,\n  saveError,\n} = authSlice.actions;\n\nexport const authReducer = authSlice.reducer;\n\nexport const getFormType = (state: RootState) => state.authentication.type;\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/selectors.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/middleware.ts",["111","112","113"],"import { AnyAction, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { RootStateOrAny } from \"react-redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { commonThunk } from \"../../../utils/apiHelpers\";\nimport { AnyThunkDispatch } from \"../../../utils/types\";\nimport { INST_SENT_TYPE, LOG_IN_TYPE } from \"../constants\";\nimport {\n  logRequest,\n  newPassRequest,\n  regRequest,\n  updateRequest,\n} from \"./loginApi\";\nimport { changeBoxType, saveError, saveLoginResult } from \"./reducer\";\n\nexport const logUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await logRequest(body);\n\n  if (res?.error) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const regUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await regRequest(body);\n\n  if (res?.error || res?.message) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const requestNewPass = (body: any) =>\n  commonThunk(\n    () => newPassRequest(body),\n    () => changeBoxType(INST_SENT_TYPE),\n    (res: any) => saveError(res.message)\n  );\n\nexport const updatePassword = () =>\n  commonThunk(updateRequest, (res: any) => saveError(res.message));\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/loginApi.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/utils/apiHelpers.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/components/AddPlus.tsx",["114"],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./addPlus.scss\";\nimport { ReactComponent as Plus } from \"../../../assets/plus.svg\";\nimport giftlogo from \"../../../assets/giftlogo.svg\";\nimport folderlogo from \"../../../assets/folderlogo.svg\";\nimport calendarlogo from \"../../../assets/calendarlogo.svg\";\n\nconst EllipseOption: React.FC<{ icon?: string; text?: string }> = ({\n  icon,\n  text,\n}) => {\n  return (\n    <button className=\"option-button\">\n      <img className=\"icon\" src={icon} />\n      <span>{text}</span>\n    </button>\n  );\n};\n\nexport default function AddPlus() {\n  const [opened, setOpened] = useState(false);\n\n  function handleOpen() {\n    setOpened(!opened);\n  }\n\n  return (\n    <>\n      <div\n        onClick={handleOpen}\n        className={`add-button ${opened ? \"opened\" : \"closed\"}`}\n      >\n        <Plus />\n      </div>\n      {opened && (\n        <div>\n          <div style={{ position: \"relative\", top: \"-200px\", right: \"-5px\" }}>\n            <EllipseOption icon={giftlogo} text=\"ЖЕЛАНИЕ\" />\n          </div>\n          <div style={{ position: \"relative\", top: \"-225px\", right: \"-100px\" }}>\n            <EllipseOption icon={folderlogo} text=\"ДОСКУ\" />\n          </div>\n          <div style={{ position: \"relative\", top: \"-195px\", right: \"-90px\" }}>\n            <EllipseOption icon={calendarlogo} text=\"СОБЫТИЕ\" />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/index.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/_common/Modal/Modal.tsx",["115"],"import React, { memo, useMemo } from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./modal.scss\";\n\nfunction closureAddRemoveModal(): [Element, Function] {\n  let created: boolean = false;\n  const div = document.createElement(\"div\");\n  div.setAttribute(\"id\", `modal ${Date.now().toString()}`);\n\n  return [\n    div,\n    (toRemove?: boolean) => {\n      if (toRemove) {\n        console.log(\"remove\");\n        div.remove();\n      }\n\n      if (!created) {\n        document.getElementById(\"root\")?.appendChild(div);\n        created = true;\n      }\n    },\n  ];\n}\n\ntype ModalProps = {\n  toShow?: boolean;\n  handleBlur?: Function;\n  children?: JSX.Element;\n  content: JSX.Element;\n};\n// TODO: add default close button and ok button\nfunction Modal({ toShow, children, content }: ModalProps): JSX.Element | null {\n  const [elem, addRemoveModal] = useMemo(closureAddRemoveModal, []);\n  const [isToShow, setIsToShow] = useState(!!toShow);\n  const elemRef = useRef<Element>(elem);\n\n  useEffect(() => {\n    setIsToShow(!!toShow);\n  }, [toShow]);\n\n  useEffect(() => {\n    addRemoveModal();\n\n    return () => addRemoveModal(true);\n  }, []);\n\n  function handleShow() {\n    setIsToShow(true);\n  }\n\n  function handleClose() {\n    setIsToShow(false);\n  }\n\n  return (\n    <>\n      <div onClick={handleShow} style={{ position: \"absolute\", zIndex: 24 }}>\n        {children}\n      </div>\n      {isToShow &&\n        ReactDOM.createPortal(\n          <div className=\"modal\">\n            <div className=\"modal-mask\" onClick={handleClose} />\n            <div className=\"modal-content-container\" onBlur={handleClose}>\n              {content}\n            </div>\n          </div>,\n          elemRef.current\n        )}\n    </>\n  );\n}\n\nexport default memo(Modal);\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":12,"column":22,"nodeType":"122","messageId":"123","endLine":12,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":12,"column":7,"nodeType":"126","endLine":12,"endColumn":49},{"ruleId":"120","severity":1,"message":"127","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":3,"column":25,"nodeType":"122","messageId":"123","endLine":3,"endColumn":38},{"ruleId":"120","severity":1,"message":"129","line":1,"column":21,"nodeType":"122","messageId":"123","endLine":1,"endColumn":34},{"ruleId":"120","severity":1,"message":"130","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":26},{"ruleId":"120","severity":1,"message":"131","line":6,"column":26,"nodeType":"122","messageId":"123","endLine":6,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":15,"column":7,"nodeType":"126","endLine":15,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":49,"column":6,"nodeType":"134","endLine":49,"endColumn":8,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'setAuthStatus' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'TO_EMAIL_TYPE' is defined but never used.","'ThunkDispatch' is defined but never used.","'AnyThunkDispatch' is defined but never used.","'LOG_IN_TYPE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addRemoveModal'. Either include it or remove the dependency array.","ArrayExpression",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [addRemoveModal]",{"range":"141","text":"142"},[1223,1225],"[addRemoveModal]"]