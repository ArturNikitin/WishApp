[{"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx":"1","/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts":"2","/Users/vlad.zakharchev/Work/WishApp/src/App.tsx":"3","/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx":"4","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx":"5","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx":"6","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/components/WishCard.tsx":"7","/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx":"8","/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx":"9","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx":"10","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts":"11","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx":"12","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx":"13","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx":"14","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogFooter.tsx":"15","/Users/vlad.zakharchev/Work/WishApp/src/store.ts":"16","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/reducer.ts":"17","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/selectors.ts":"18","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/middleware.ts":"19","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/loginApi.ts":"20","/Users/vlad.zakharchev/Work/WishApp/src/utils/apiHelpers.ts":"21","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/components/AddPlus.tsx":"22"},{"size":620,"mtime":1630940555020,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1624353155247,"results":"25","hashOfConfig":"24"},{"size":1171,"mtime":1635867241166,"results":"26","hashOfConfig":"24"},{"size":957,"mtime":1637075842796,"results":"27","hashOfConfig":"24"},{"size":476,"mtime":1624353155244,"results":"28","hashOfConfig":"24"},{"size":2089,"mtime":1637071575585,"results":"29","hashOfConfig":"24"},{"size":852,"mtime":1639219464416,"results":"30","hashOfConfig":"24"},{"size":479,"mtime":1637182928040,"results":"31","hashOfConfig":"24"},{"size":336,"mtime":1624353155246,"results":"32","hashOfConfig":"24"},{"size":2516,"mtime":1634379900353,"results":"33","hashOfConfig":"24"},{"size":655,"mtime":1633256364055,"results":"34","hashOfConfig":"24"},{"size":7295,"mtime":1634380044464,"results":"35","hashOfConfig":"24"},{"size":440,"mtime":1632236894782,"results":"36","hashOfConfig":"24"},{"size":1203,"mtime":1634384950613,"results":"37","hashOfConfig":"24"},{"size":580,"mtime":1634384553972,"results":"38","hashOfConfig":"24"},{"size":690,"mtime":1626561227260,"results":"39","hashOfConfig":"24"},{"size":1126,"mtime":1634384194229,"results":"40","hashOfConfig":"24"},{"size":125,"mtime":1631034533020,"results":"41","hashOfConfig":"24"},{"size":1299,"mtime":1634376397036,"results":"42","hashOfConfig":"24"},{"size":404,"mtime":1634376377275,"results":"43","hashOfConfig":"24"},{"size":1261,"mtime":1635867146397,"results":"44","hashOfConfig":"24"},{"size":1428,"mtime":1637069975438,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pks9ao",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx",[],["96","97"],"/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/App.tsx",["98"],"import React from \"react\";\n\nimport \"./App.scss\";\nimport Sidebar from \"./modules/Sidebar/Sidebar\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./modules/Header/Header\";\nimport { ActivityContainer } from \"./modules/ActivityContainer/ActivityContainer\";\nimport { useState } from \"react\";\nimport { AuthContainer } from \"./modules/LoginPage/AuthContainer\";\n\nfunction App() {\n  const [authStatus, setAuthStatus] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return authStatus ? (\n                <Redirect to=\"/home\" />\n              ) : (\n                <Redirect to=\"/auth\" />\n              );\n            }}\n          />\n          <Route path=\"/home\">\n            <div className=\"App\">\n              <Sidebar />\n              <Header />\n              <ActivityContainer />\n            </div>\n          </Route>\n          <Route path=\"/auth\">\n            <AuthContainer />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/components/WishCard.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx",["99"],"import React, { ChangeEventHandler, useState } from \"react\";\nimport {\n  LOG_IN_TYPE,\n  SIGN_UP_TYPE,\n  NEW_PASS_TYPE,\n  TO_EMAIL_TYPE,\n  AuthFormTypes,\n  FormConstructData,\n  FormValues,\n  INST_SENT_TYPE,\n} from \"./constants\";\nimport \"./authPage.scss\";\nimport { Button } from \"./components/Button\";\nimport { useEffect } from \"react\";\nimport { LogHeader } from \"./LogHeader\";\nimport { useAuth } from \"./redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { changeBoxType, saveError } from \"./redux/reducer\";\nimport {\n  logUser,\n  regUser,\n  requestNewPass,\n  updatePassword,\n} from \"./redux/middleware\";\n\nconst LOG_HEADER = \"Организовывайте свои идеи подарков и мероприятий\";\nconst FORGET_HEADER = [\"Забыли пароль?\", \"Такое случается с лучшими из нас\"];\nconst INSTR_HEADER = \"Инструкция отправлена!\";\nconst NEW_PASS_HEADER = [\n  \"Изменение пароля\",\n  \"Длина пароля должна быть не менее 8 символов\",\n];\n\nconst EMAIL_PH = \"Email\";\nconst PASSWORD_PH = \"Пароль\";\nconst NEW_PASSWORD_PH = \"Введите новый пароль\";\nconst REPEAT_NEW_PASSWORD_PH = \"Повторите пароль\";\n\nconst LOGIN = \"ВОЙТИ\";\nconst CONTINUE = \"ПРОДОЛЖИТЬ\";\nconst SEND_INSTRUCTION = \"ОТПРАВИТЬ ИНСТРУКЦИЮ\";\nconst CHANGE_PASSWORD = \"ИЗМЕНИТЬ ПАРОЛЬ\";\n\nconst RECOVERY_HELP = \"Забыли пароль?\";\nconst ERROR_LOGIN_MESSAGE =\n  \"Неправильный логин или пароль. Может быть вы забыли пароль?\";\nconst ERROR_EMAIL_ADDRESS_MESSAGE =\n  \"Кажется, вы ввели некорректный адрес, проверьте еще раз\";\nconst ERROR_UNMATCH = \"Пароли не совпадают\";\n\nfunction selectConstructObject(type: AuthFormTypes): FormConstructData {\n  switch (type) {\n    case LOG_IN_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n    case SIGN_UP_TYPE:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: CONTINUE,\n        header: LOG_HEADER,\n      };\n    case TO_EMAIL_TYPE:\n      return {\n        inputs: [{ name: \"email\", placeholder: EMAIL_PH }],\n        submitButton: SEND_INSTRUCTION,\n        errorMsg: ERROR_EMAIL_ADDRESS_MESSAGE,\n        header: FORGET_HEADER,\n      };\n    case NEW_PASS_TYPE:\n      return {\n        inputs: [\n          { name: \"password\", placeholder: NEW_PASSWORD_PH },\n          { name: \"repeatPassword\", placeholder: REPEAT_NEW_PASSWORD_PH },\n        ],\n        submitButton: CHANGE_PASSWORD,\n        errorMsg: ERROR_UNMATCH,\n        header: NEW_PASS_HEADER,\n      };\n    default:\n      return {\n        inputs: [\n          { name: \"email\", placeholder: EMAIL_PH },\n          { name: \"password\", placeholder: PASSWORD_PH },\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE,\n        header: LOG_HEADER,\n      };\n  }\n}\n\nfunction constructForm(\n  constructData: FormConstructData,\n  inputValues: FormValues,\n  changeInput: ChangeEventHandler,\n  onSubmit: any,\n  error?: boolean | string,\n  changeForm?: any\n) {\n  const editOnce = (function () {\n    //TODO - change function to css define\n    let isFirst = true;\n\n    return () => {\n      if (isFirst) {\n        isFirst = false;\n        return \"first\";\n      }\n      return \"\";\n    };\n  })();\n\n  const passQuestion = constructData.passwordRecovery;\n\n  const checkInputEmptiness =\n    Object.values(inputValues).length >= constructData.inputs.length &&\n    Object.values(inputValues).every((value) => !!value);\n\n  return (\n    <form>\n      {error && (\n        <div className=\"error-message\">{constructData.errorMsg || error}</div>\n      )}\n      {constructData.inputs.map((elem) => (\n        <input\n          className={`${editOnce()} ${error && \"input-warning\"}`}\n          name={elem.name}\n          placeholder={elem.placeholder || \"\"}\n          onChange={changeInput}\n        />\n      ))}\n      {passQuestion && (\n        <div className=\"passQuestion\">\n          <div className=\"bold\" onClick={changeForm}>\n            {constructData.passwordRecovery}\n          </div>\n        </div>\n      )}\n      {\n        <Button\n          onClick={onSubmit}\n          isDisabled={!checkInputEmptiness}\n          className={passQuestion ? \"close-button\" : \"\"}\n        >\n          {constructData.submitButton}\n        </Button>\n      }\n    </form>\n  );\n}\n\nconst SendDescription: React.FC<{ email?: string }> = ({ email }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <LogHeader header={INSTR_HEADER} />\n      <p>Вы получите наше письмо в течение 5 минут</p>\n      <p style={{ fontWeight: 600 }}>{email}</p>\n      <p>\n        {\"Не приходит письмо? Убедитесь, что оно не попало в папку спам. \"}\n        <span\n          onClick={() => {\n            dispatch(changeBoxType(INST_SENT_TYPE));\n            dispatch(requestNewPass(email));\n          }}\n          className=\"footer-link\"\n        >\n          Отправить еще раз\n        </span>\n      </p>\n    </>\n  );\n};\n\nexport const DataInputComponent = () => {\n  const dispatch = useDispatch();\n  const { error: errorMsg, type } = useAuth();\n\n  const [formData, setFormData] = useState<any>({});\n  const constructObject = selectConstructObject(type);\n\n  function onSubmit(formData: any) {\n    console.log(formData);\n    switch (type) {\n      case LOG_IN_TYPE: {\n        dispatch(logUser(formData));\n        break;\n      }\n      case SIGN_UP_TYPE: {\n        dispatch(regUser(formData));\n        break;\n      }\n      case TO_EMAIL_TYPE: {\n        dispatch(requestNewPass(formData));\n        dispatch(changeBoxType(INST_SENT_TYPE));\n        break;\n      }\n      case NEW_PASS_TYPE: {\n        dispatch(updatePassword());\n        break;\n      }\n    }\n  }\n\n  function changeFormData(event: any) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    dispatch(saveError(\"\"));\n  }\n\n  function changeForm() {\n    dispatch(changeBoxType(TO_EMAIL_TYPE));\n  }\n\n  const headerProps = (function () {\n    const { header } = constructObject;\n    if (Array.isArray(header)) {\n      return {\n        header: header[0],\n        additional: header[1],\n      };\n    }\n    return { header } as { header: string };\n  })();\n\n  // useEffect(() => {\n  //   const initial: FormValues = {};\n  //   setFormData(initial);\n  // }, [type]);\n\n  if (type === INST_SENT_TYPE) {\n    return <SendDescription email={formData?.email} />;\n  }\n\n  return (\n    <>\n      <LogHeader {...headerProps} />\n      {constructForm(\n        constructObject,\n        formData,\n        changeFormData,\n        () => onSubmit(formData),\n        errorMsg,\n        changeForm\n      )}\n    </>\n  );\n};\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogFooter.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/store.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/reducer.ts",["100"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../store\";\nimport { AuthFormTypes, TO_EMAIL_TYPE } from \"../constants\";\n\ntype LogResponse = {\n  [key: string]: string | number | undefined;\n};\n\ninterface AuthState {\n  type: AuthFormTypes;\n  login: LogResponse;\n  error: string;\n}\n\nconst initialState: AuthState = {\n  type: \"LOGIN\",\n  login: {},\n  error: \"\",\n};\n\nexport const authSlice = createSlice({\n  name: \"authentication\",\n  initialState,\n  reducers: {\n    changeBoxType: (state, action: PayloadAction<AuthFormTypes>) => {\n      state.type = action.payload;\n    },\n    saveLoginResult: (state, action: PayloadAction<LogResponse>) => {\n      state.login = action.payload;\n    },\n    saveError: (state, { payload }) => {\n      state.error = payload;\n    },\n    clearForm: (state) => {\n      return { ...initialState, type: state.type };\n    },\n  },\n});\n\nexport const {\n  changeBoxType,\n  saveLoginResult,\n  clearForm,\n  saveError,\n} = authSlice.actions;\n\nexport const authReducer = authSlice.reducer;\n\nexport const getFormType = (state: RootState) => state.authentication.type;\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/selectors.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/middleware.ts",["101","102","103"],"import { AnyAction, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { RootStateOrAny } from \"react-redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { commonThunk } from \"../../../utils/apiHelpers\";\nimport { AnyThunkDispatch } from \"../../../utils/types\";\nimport { INST_SENT_TYPE, LOG_IN_TYPE } from \"../constants\";\nimport {\n  logRequest,\n  newPassRequest,\n  regRequest,\n  updateRequest,\n} from \"./loginApi\";\nimport { changeBoxType, saveError, saveLoginResult } from \"./reducer\";\n\nexport const logUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await logRequest(body);\n\n  if (res?.error) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const regUser = (\n  body: any\n): ThunkAction<void, RootStateOrAny, any, AnyAction> => async (dispatch) => {\n  const res = await regRequest(body);\n\n  if (res?.error || res?.message) {\n    dispatch(saveError(res.message));\n  }\n\n  dispatch(saveLoginResult(res));\n};\n\nexport const requestNewPass = (body: any) =>\n  commonThunk(\n    () => newPassRequest(body),\n    () => changeBoxType(INST_SENT_TYPE),\n    (res: any) => saveError(res.message)\n  );\n\nexport const updatePassword = () =>\n  commonThunk(updateRequest, (res: any) => saveError(res.message));\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/redux/loginApi.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/utils/apiHelpers.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/components/AddPlus.tsx",["104"],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./addPlus.scss\";\nimport { ReactComponent as Plus } from \"../../../assets/plus.svg\";\nimport giftlogo from \"../../../assets/giftlogo.svg\";\nimport folderlogo from \"../../../assets/folderlogo.svg\";\nimport calendarlogo from \"../../../assets/calendarlogo.svg\";\n\nconst EllipseOption: React.FC<{ icon?: string; text?: string }> = ({\n  icon,\n  text,\n}) => {\n  return (\n    <button className=\"option-button\">\n      <img className=\"icon\" src={icon} />\n      <span>{text}</span>\n    </button>\n  );\n};\n\nexport default function AddPlus() {\n  const [opened, setOpened] = useState(false);\n\n  function handleOpen() {\n    setOpened(!opened);\n  }\n\n  return (\n    <>\n      <div\n        onClick={handleOpen}\n        className={`add-button ${opened ? \"opened\" : \"closed\"}`}\n      >\n        <Plus />\n      </div>\n      {opened && (\n        <div>\n          <div style={{ position: \"relative\", top: \"-200px\", right: \"-5px\" }}>\n            <EllipseOption icon={giftlogo} text=\"ЖЕЛАНИЕ\" />\n          </div>\n          <div style={{ position: \"relative\", top: \"-225px\", right: \"-100px\" }}>\n            <EllipseOption icon={folderlogo} text=\"ДОСКУ\" />\n          </div>\n          <div style={{ position: \"relative\", top: \"-195px\", right: \"-90px\" }}>\n            <EllipseOption icon={calendarlogo} text=\"СОБЫТИЕ\" />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":12,"column":22,"nodeType":"111","messageId":"112","endLine":12,"endColumn":35},{"ruleId":"109","severity":1,"message":"113","line":14,"column":10,"nodeType":"111","messageId":"112","endLine":14,"endColumn":19},{"ruleId":"109","severity":1,"message":"114","line":3,"column":25,"nodeType":"111","messageId":"112","endLine":3,"endColumn":38},{"ruleId":"109","severity":1,"message":"115","line":1,"column":21,"nodeType":"111","messageId":"112","endLine":1,"endColumn":34},{"ruleId":"109","severity":1,"message":"116","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":26},{"ruleId":"109","severity":1,"message":"117","line":6,"column":26,"nodeType":"111","messageId":"112","endLine":6,"endColumn":37},{"ruleId":"118","severity":1,"message":"119","line":15,"column":7,"nodeType":"120","endLine":15,"endColumn":42},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'setAuthStatus' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'TO_EMAIL_TYPE' is defined but never used.","'ThunkDispatch' is defined but never used.","'AnyThunkDispatch' is defined but never used.","'LOG_IN_TYPE' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]