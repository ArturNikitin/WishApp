[{"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx":"1","/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts":"2","/Users/vlad.zakharchev/Work/WishApp/src/App.tsx":"3","/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx":"4","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx":"5","/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx":"6","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/components/WishCard.tsx":"7","/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx":"8","/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx":"9","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx":"10","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts":"11","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx":"12","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx":"13","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx":"14"},{"size":500,"mtime":1624353155243,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1624353155247,"results":"17","hashOfConfig":"16"},{"size":1085,"mtime":1624779576969,"results":"18","hashOfConfig":"16"},{"size":1117,"mtime":1624353155245,"results":"19","hashOfConfig":"16"},{"size":476,"mtime":1624353155244,"results":"20","hashOfConfig":"16"},{"size":1758,"mtime":1624353155246,"results":"21","hashOfConfig":"16"},{"size":781,"mtime":1624353155244,"results":"22","hashOfConfig":"16"},{"size":466,"mtime":1624353155247,"results":"23","hashOfConfig":"16"},{"size":336,"mtime":1624353155246,"results":"24","hashOfConfig":"16"},{"size":918,"mtime":1624780872730,"results":"25","hashOfConfig":"16"},{"size":557,"mtime":1624353155246,"results":"26","hashOfConfig":"16"},{"size":3744,"mtime":1624777049865,"results":"27","hashOfConfig":"16"},{"size":472,"mtime":1624775585170,"results":"28","hashOfConfig":"16"},{"size":695,"mtime":1624777226241,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pks9ao",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/vlad.zakharchev/Work/WishApp/src/index.tsx",[],["62","63"],"/Users/vlad.zakharchev/Work/WishApp/src/reportWebVitals.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/App.tsx",["64"],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Header/Header.tsx",["65","66"],"import React from \"react\";\nimport \"./header.scss\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\n\nimport { ReactComponent as MyWishesImage } from '../../assets/myWishes.svg';\nimport { ReactComponent as SearchIcon } from '../../assets/searchIcon.svg';\nimport { ReactComponent as DoorbellIcon } from '../../assets/doorbellIcon.svg';\nimport { ReactComponent as ShareIcon } from '../../assets/shareIcon.svg';\nimport exampleUserAvatar from '../../assets/exampleUserAvatar.png';\n\nimport { UserAppearance } from '../UserAppearance/UserAppearance';\n\nconst SEARCH_PLACEHOLDER = \"Поиск\";\n\nexport const Header = function() {\n  return(\n    <div className='header-wrapper'>\n      <MyWishesImage className='my-wishes'/>\n      <div className='search-container'>\n        <SearchIcon className='search-icon'/>\n        <input className='search-input' placeholder={SEARCH_PLACEHOLDER}/>\n      </div>\n      <UserAppearance imgSource={exampleUserAvatar} email=\"kingvaneternal@gmail.com\"/>\n      <div className=\"icon-row\">\n        <SearchIcon/>\n        <DoorbellIcon/>\n        <ShareIcon/>\n      </div>\n    </div>\n  );\n};","/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/ActivityContainer.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/Sidebar/Sidebar.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/ActivityContainer/components/WishCard.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/UserAppearance/UserAppearance.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/SidebarHeader/SidebarHeader.tsx",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/AuthContainer.tsx",["67"],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/constants.ts",[],"/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/DataInputComponent.tsx",["68"],"import React, { ChangeEventHandler, ReactElement, useState } from 'react';\nimport { LOGIN_TYPE, SIGNUP_TYPE, NEW_PASS_TYPE, TO_EMAIL_TYPE, AuthFormTypes, FormConstructData, FormValues } from './constants';\nimport './authPage.scss';\nimport { Button } from './components/Button';\n\nconst EMAIL_PH = \"Email\";\nconst PASSWORD_PH = \"Пароль\";\nconst NEW_PASSWORD_PH = \"Введите новый пароль\";\nconst REPEAT_NEW_PASSWORD_PH = \"Повторите пароль\";\n\nconst LOGIN = \"Войти\";\nconst CONTINUE = \"ПРОДОЛЖИТЬ\";\nconst SEND_INSTRUCTION = \"Отправить инструкцию\";\nconst CHANGE_PASSWORD = \"ИЗМЕНИТЬ ПАРОЛЬ\";\n\nconst RECOVERY_HELP = \"Забыли пароль?\";\nconst ERROR_LOGIN_MESSAGE = \"Неправильный логин или пароль. Может быть вы забыли пароль?\";\nconst ERROR_EMAIL_ADDRESS_MESSAGE = \"Кажется, вы ввели некорректный адрес, проверьте еще раз\";\nconst ERROR_UNMATCH = \"Пароли не совпадают\";\n\nfunction selectConstructObject(type: AuthFormTypes): FormConstructData {\n  switch(type) {\n    case LOGIN_TYPE: \n      return {\n        inputs: [\n          { name: 'email', placeholder: EMAIL_PH },\n          { name: 'password', placeholder: PASSWORD_PH }\n        ],\n        submitButton: LOGIN,\n        passwordRecovery: RECOVERY_HELP,\n        errorMsg: ERROR_LOGIN_MESSAGE\n      }\n    case SIGNUP_TYPE:\n      return {\n        inputs: [\n          { name: 'email', placeholder: EMAIL_PH },\n          { name: 'password', placeholder: PASSWORD_PH }\n        ],\n        submitButton: CONTINUE,\n      }\n    case TO_EMAIL_TYPE:\n      return {\n        inputs: [\n          { name: 'email', placeholder: EMAIL_PH },\n        ],\n        submitButton: SEND_INSTRUCTION,\n        errorMsg: ERROR_EMAIL_ADDRESS_MESSAGE\n      }\n    case NEW_PASS_TYPE:\n      return {\n        inputs: [\n          { name: 'password', placeholder: NEW_PASSWORD_PH },\n          { name: 'repeatPassword', placeholder: REPEAT_NEW_PASSWORD_PH }\n        ],\n        submitButton: CHANGE_PASSWORD,\n        errorMsg: ERROR_UNMATCH\n      }\n  }\n}\n\nfunction constructForm(constructData: FormConstructData, inputValues: FormValues, changeInput: ChangeEventHandler, submitData: any, isError?: boolean, changeFrom?: any) {\n  const editOnce = function() {\n    let isFirst = true;\n\n    return () => {\n      if(isFirst) {\n        isFirst = false;\n        return 'first';\n      }\n      return '';\n    }\n  }();\n\n  const passQuestion = constructData.passwordRecovery;\n\n  return(\n    <form>\n      {isError && <div>{constructData.errorMsg}</div>}\n      {\n        constructData.inputs.map(elem => \n          <input className={editOnce()} name={elem.name} placeholder={elem.placeholder || ''} onChange={changeInput}>{inputValues[elem.name]}</input>\n        )\n      }\n      {passQuestion && \n        <p className=\"passQuestion\" onClick={changeFrom}>{constructData.passwordRecovery}</p>\n      }\n      {\n        <Button onSubmit={submitData} className={passQuestion ? \"close-button\" : \"\"}>{constructData.submitButton}</Button>\n      }\n    </form>\n  );\n}\n\nexport const DataInputComponent: React.FC<{type: AuthFormTypes}> = ({type}) => {\n  const [formData, setFormData] = useState({});\n  const constructObject = selectConstructObject(type);\n\n  const onSubmit = (formData: any) => {\n    console.log(formData);\n    //get request based on type\n  }\n  const isError = false;\n\n  function changeFormData(event: any) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  \n  return constructForm(constructObject, formData, changeFormData, onSubmit, isError);\n}","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/LogHeader.tsx",["69"],"import React from \"react\";\n\nimport { ReactComponent as HeadSVG } from '../../assets/IGY2rows.svg';\n\nconst HEADER_TEXT = \"Организовывайте свои идеи подарков и мероприятий\";\n\nexport const LogHeader = ({ header, additional }: { header: string, additional?: string }) => {\n  return(\n    <div className=\"header-container\">\n      <HeadSVG className=\"header-logo\"/>\n      <h3>{header}</h3>\n      <h4>{additional}</h4>\n    </div>\n  );\n}\n","/Users/vlad.zakharchev/Work/WishApp/src/modules/LoginPage/components/Button.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":12,"column":22,"nodeType":"76","messageId":"77","endLine":12,"endColumn":35},{"ruleId":"74","severity":1,"message":"78","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":3,"column":23,"nodeType":"76","messageId":"77","endLine":3,"endColumn":33},{"ruleId":"74","severity":1,"message":"80","line":17,"column":19,"nodeType":"76","messageId":"77","endLine":17,"endColumn":29},{"ruleId":"74","severity":1,"message":"81","line":1,"column":37,"nodeType":"76","messageId":"77","endLine":1,"endColumn":49},{"ruleId":"74","severity":1,"message":"82","line":5,"column":7,"nodeType":"76","messageId":"77","endLine":5,"endColumn":18},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'setAuthStatus' is assigned a value but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'setBoxType' is assigned a value but never used.","'ReactElement' is defined but never used.","'HEADER_TEXT' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]